--[[
	This script is part of a GitHub repository:
    https://github.com/pupkin-afk/DiriPackScripts/tree/main
    
	Author: nicell4 (Roblox) / pupkin-afk (GitHub)
	License: MIT — see LICENSE file in the repo
	
	(c) 2025 — Use freely, but respect the license and the author
]]

local module = {};
local cs = game:GetService("CollectionService");
local plr = game.Players.LocalPlayer;
local pgUI = plr:WaitForChild("PlayerGui");
local AT = require(game.ReplicatedStorage["element/autogenerated"]);

local getElementByTag: AT.combined = function(tag)
	for _, v in cs:GetTagged(tag) do
		if v:IsDescendantOf(pgUI) then
			return v;
		end
	end

	local conn;
	local res;
	conn = cs:GetInstanceAddedSignal(tag):Connect(function(v: T)
		if v:IsDescendantOf(pgUI) then
			res = v;
		end
	end)

	repeat task.wait() until res;
	conn:Disconnect();
	return res;
end

module.getElementByTag = getElementByTag;
--function module.getElementByTag(tag: string)
	
--end

function module.eachElementByTag(tag: string, cb: (elem: Instance) -> ())
	for _, v in cs:GetTagged(tag) do
		if v:IsDescendantOf(pgUI) then
			cb(v);
		end
	end
	
	cs:GetInstanceAddedSignal(tag):Connect(function(v: T)
		if v:IsDescendantOf(pgUI) then
			cb(v);
		end
	end)
end

return module;
