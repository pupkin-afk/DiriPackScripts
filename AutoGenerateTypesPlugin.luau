--[[
	This script is part of a GitHub repository:
    https://github.com/pupkin-afk/DiriPackScripts/tree/main
    
	Author: nicell4 (Roblox) / pupkin-afk (GitHub)
	License: MIT — see LICENSE file in the repo
	
	(c) 2025 — Use freely, but respect the license and the author
]]

local ChangeHistoryService = game:GetService("ChangeHistoryService");
local Selection = game:GetService("Selection");
local cs = game:GetService("CollectionService");

local toolbar = plugin:CreateToolbar("Element Helper")

--[[ Clear Tags ]] --
local clearTagsBtn = toolbar:CreateButton("Remove tags", "Remove tags on selected instances and their descendants", "rbxassetid://382767581");
clearTagsBtn.ClickableWhenViewportHidden = true;

local function rmProc(v: Instance)
	for _, tag in cs:GetTags(v) do
		if tag:sub(1,4) == "core" then
			continue;
		end
		cs:RemoveTag(v, tag);
	end
	
	for _, v in v:GetChildren() do
		rmProc(v);
	end
end

clearTagsBtn.Click:Connect(function()
	for _, v in Selection:Get() do
		rmProc(v);
	end
end)

local isFounded = false;

for _, v in game.StarterPlayer:GetDescendants() do
	if v.Name == "Element" then
		isFounded = true;
		break;
	end
end

if not isFounded then
	return;
end

-- [[ Autp generate types ]] --
@native
local function generate()
	local str = "";
	local ind = 0;
	
	for _, v in game.StarterGui:GetDescendants() do
		for _, tag in cs:GetTags(v) do
			if tag:sub(1,4) == "core" then
				continue;
			end
			str ..= `type literal{ind} = "{tag}";\n`;
			str ..= `type func{ind} = (arg: literal{ind}) -> typeof(game.{v:GetFullName()});\n`;
			ind += 1;
		end
	end
	
	str ..= "\nexport type combined = ";
	for i = 0, ind do
		str ..= `func{i}`;
		if i < ind then
			str ..= " & ";
		else
			str ..= ";";
		end
	end
	
	str ..= "\n\nreturn {};";
	
	local m: ModuleScript = game.ReplicatedStorage:FindFirstChild("element/autogenerated");
	if not m then
		m = Instance.new("ModuleScript");
		m.Name = "element/autogenerated";
		m.Parent = game.ReplicatedStorage;
	end
	
	m.Source = str;
end

generate();

local conns = {};

conns[#conns + 1] = game.StarterGui.ChildAdded:Connect(generate);
conns[#conns + 1] = game.StarterGui.ChildRemoved:Connect(generate);
conns[#conns + 1] = cs.TagAdded:Connect(generate);
conns[#conns + 1] = cs.TagRemoved:Connect(generate);

plugin.Unloading:Connect(function()
	for _, v in conns do
		v:Disconnect();
	end
end)
